name: "Release sigstore-go"

on:
  push:
    tags:
      - "v*.*.*"

env:
  REPO: 'https://github.com/AdamKorcz/test-releasing'
  REPO_OWNER: '${{ github.event.repository.owner.name }}'
  REPO_NAME: '${{ github.event.repository.name }}'

permissions:
  id-token: write
  contents: write
  attestations: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out the repo _before_ issuing the release
      # so we have the ground truth.
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.ref_name }}
      - name: Release
        uses: softprops/action-gh-release@v2
      - name: Download zip source archive from API
        uses: robinraju/release-downloader@v1
        with:
          latest: true
          zipBall: true
          out-file-path: '${{ github.workspace }}/../source-archives' # download-path
          tag: ${{ github.ref_name }}
      - name: Download tar source archive from API
        uses: robinraju/release-downloader@v1
        with:
          latest: true
          tarBall: true
          out-file-path: '${{ github.workspace }}/../source-archives' # download-path
          tag: ${{ github.ref_name }}
      - name: Download archives from archive/tags
        working-directory: ${{ github.workspace }}
        env:
          DEST_DIR: '${{ github.workspace }}/../source-archives'
        run: |
          ls && pwd && ls ${{ github.workspace }}
          export DEST_DIR="${{ github.workspace }}/../source-archives"
          wget "${REPO}"/archive/tags/${{ github.ref_name }}.zip -O "${DEST_DIR}"/"${REPO_NAME}"-tags-${{ github.ref_name }}.zip
          wget "${REPO}"/archive/tags/${{ github.ref_name }}.tar.gz -O "${DEST_DIR}"/"${REPO_NAME}"-tags-${{ github.ref_name }}.tar.gz
          wget "${REPO}"/archive/refs/tags/${{ github.ref_name }}.zip -O "${DEST_DIR}"/"${REPO_NAME}"-refs-tags-${{ github.ref_name }}.zip
          wget "${REPO}"/archive/refs/tags/${{ github.ref_name }}.tar.gz -O "${DEST_DIR}"/"${REPO_NAME}"-refs-tags-${{ github.ref_name }}.tar.gz
      - name: Verify all downloaded source archives
        working-directory: ${{ github.workspace }}
        env:
          RELEASE_VERSION: '${{ github.ref_name }}'
        run: |
          export shortened_sha=$(echo "${GITHUB_SHA}" | head -c 7)
          export directory="${REPO_NAME}" # The directory to verify source archives against
          export TAG_WITHOUT_V=${RELEASE_VERSION#"v"} # eg. v0.0.1 becomes 0.0.1
          cd ..
          if [ ! -d "$directory" ]; then
            exit 1
          fi

          verify_file() {
            filename=$1
            trusted_dir=$2
            untrusted_dir=$3
            path="${trusted_dir}/${filename#*/}"
            cs_file1=$(sha256sum "${path}" | head -c 64)

            path2="${untrusted_dir}/${filename#*/}"
            cs_file2=$(sha256sum "${path2}" | head -c 64)
            echo verifying "${path}" and "${path2}"
            if [ "$cs_file1" != "$cs_file2" ]; then exit 1; fi
          }
          export -f verify_file

          dirs_are_equal() {
            export trusted_dir=$1
            export untrusted_dir=$2 
            find $trusted_dir -type f -not -path "*.git/*" -exec bash -c 'verify_file {} $trusted_dir $untrusted_dir' \;
            number_of_files1=$(find "${trusted_dir}" -type f -not -path "*.git/*" | wc -l)
            number_of_files2=$(find "${untrusted_dir}" -type f -not -path "*.git/*" | wc -l)
            if [ "$number_of_files1" != "$number_of_files2" ]; then echo "WRONG" && exit 1; else echo "SAME AMOUNT OF FILES"; fi
            echo $number_of_files1 $number_of_files2
          }

          verify_compressed_dir() {
            extracted_dir_name=$1
            archive_name=$2
            compressed_type=$3

            export dir_name="${extracted_dir_name}"
            if [ -d "${dir_name}" ]; then
              echo "${dir_name} already exists but shouldn't."
              exit 1
            fi
            if [ "$compressed_type" = "zip" ]; then
              unzip source-archives/"${archive_name}"
            else
              tar -xvzf source-archives/"${archive_name}"
            fi
            dirs_are_equal "${directory}" "${dir_name}"
            rm -r "${dir_name}"
          }
          echo "Verifying all downloaded source archives"

          ls source-archives
          verify_compressed_dir \
                  "${REPO_OWNER}-${REPO_NAME}-${shortened_sha}" \
                  "${REPO_NAME}-${{ github.ref_name }}.zip" \
                  "zip"
          verify_compressed_dir \
                  "${REPO_OWNER}-${REPO_NAME}-${shortened_sha}" \
                  "${REPO_NAME}-${{ github.ref_name }}.tar.gz" \
                  "tar.gz"
          verify_compressed_dir \
                  "${REPO_NAME}-tags-${{ github.ref_name }}" \
                  "${REPO_NAME}-tags-${{ github.ref_name }}.zip" \
                  "zip"
          verify_compressed_dir \
                  "${REPO_NAME}-tags-${{ github.ref_name }}" \
                  "${REPO_NAME}-tags-${{ github.ref_name }}.tar.gz" \
                  "tar.gz"
          verify_compressed_dir \
                  "${REPO_NAME}-${TAG_WITHOUT_V}" \
                  "${REPO_NAME}-refs-tags-${{ github.ref_name }}.zip" \
                  "zip"
          verify_compressed_dir \
                  "${REPO_NAME}-${TAG_WITHOUT_V}" \
                  "${REPO_NAME}-refs-tags-${{ github.ref_name }}.tar.gz" \
                  "tar.gz"
      - name: Move source archive files
        run: |
          mv ${{ github.workspace }}/../source-archives ./
          find source-archives -type f -exec bash -c 'echo {} && sha256sum {}' \;
      - name: Attest all
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'source-archives/*'